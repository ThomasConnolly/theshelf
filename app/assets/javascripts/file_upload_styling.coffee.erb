$ ->
  class FileUploadStyling
    constructor: (item) ->
      @$el = $(item)
      @$proxy = $('<a class="image-upload-link" href="#">' + @$el.data('text') + '</a>')
      @hideInput()
      @createProxy()

    hideInput: ->
      @$el.hide()

    createProxy: ->
      @$el.after(@$proxy)
      @$proxy.on 'click', (event) =>
        event.preventDefault()
        @clickCallback()

    clickCallback: ->
      @$el.trigger 'click'

  class FileUploadStylingPreview extends FileUploadStyling
    constructor: (item, imageRemovalSelectors) ->
      super(item)

      @fallbackImage = @$el.data('fallbackimage')
      @previewedImage = @$el.parent().css("background-image").replace(/url\(|\)/g, "")
      @$removeLink = @$el.siblings(imageRemovalSelectors.removeLink)
      @$undoLink = @$el.siblings(imageRemovalSelectors.undoLink)
      @$removeImageHiddenInput = @$el.siblings(imageRemovalSelectors.removeImageHiddenInput)

      @$undoLink.hide()
      @$removeLink.hide() unless @isStored(@previewedImage)

      @bindRemoveLink()
      @bindUndoLink()

    clickCallback: ->
      @$el.trigger 'click'
      @$el.on 'change', =>
        @reloadPreview()

    reloadPreview: ->
      if @$el[0].files && @$el[0].files[0]
        reader = new FileReader()
        reader.onload = (elem) =>
          @previewImage(elem.target.result)
          @$removeImageHiddenInput.val('0')
          @$undoLink.show()
          @$removeLink.hide()
        reader.readAsDataURL(@$el[0].files[0])

    previewImage: (image) ->
      @$el.parent().css("background-image", 'url('+image+')')

    bindRemoveLink: ->
      @$removeLink.on 'click', (event) =>
        @$el.val('')
        @$undoLink.show()
        @$removeLink.hide()
        @$removeImageHiddenInput.val('1')
        @previewImage(@fallbackImage)
        event.preventDefault()

    bindUndoLink: ->
      @$undoLink.on 'click', (event) =>
        @$el.val('')
        @$undoLink.hide()
        if @isStored(@previewedImage)
          @$removeLink.show()
          @previewImage(@previewedImage)
          @$removeImageHiddenInput.val('0')
        else
          @previewImage(@fallbackImage)
        event.preventDefault()

    isStored: (image) ->
      !RegExp("fallback", "i").test(image)

  initialize = (imageRemovalSelectors) ->
    $('input[type="file"]').each (index, item) ->
      if $(item).parent().hasClass('image-upload-with-preview')
        new FileUploadStylingPreview(item, { removeLink: ".remove-link", undoLink: ".undo-link", removeImageHiddenInput: ".remove-image" })
      else
        new FileUploadStyling(item)

  window.theshelf ||= {}
  window.theshelf.fileUploadStyling = initialize
